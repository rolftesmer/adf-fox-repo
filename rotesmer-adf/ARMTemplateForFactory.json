{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rotesmer-adf"
		},
		"foxaueast_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'foxaueast'"
		},
		"foxaueastsql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'foxaueastsql'"
		},
		"foxaueast_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://foxaueast.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MoveFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait For 10 Mins",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 600
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {
						"duration": "0.00:10:00"
					},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String",
						"defaultValue": "csv-parking-violations"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String",
						"defaultValue": "csv-parking-violations"
					},
					"DestinationStore_Directory": {
						"type": "String",
						"defaultValue": "copy"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BinaryDataSource_Folder')]",
				"[concat(variables('factoryId'), '/datasets/BinaryDataSource_File')]",
				"[concat(variables('factoryId'), '/datasets/BinaryDataDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "foxaueast",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String",
						"defaultValue": "csv-parking-violations"
					},
					"Directory": {
						"type": "String",
						"defaultValue": "copy"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/foxaueast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "foxaueast",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String",
						"defaultValue": "csv-parking-violations"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string",
						"defaultValue": "NYC_2018_Parking_Violations_Issued-*.csv"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/foxaueast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "foxaueast",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String",
						"defaultValue": "csv-parking-violations"
					},
					"Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/foxaueast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvparkingviolations')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "foxaueast",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "csv-parking-violations"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Summons Number",
						"type": "String"
					},
					{
						"name": "Plate ID",
						"type": "String"
					},
					{
						"name": "Registration State",
						"type": "String"
					},
					{
						"name": "Plate Type",
						"type": "String"
					},
					{
						"name": "Issue Date",
						"type": "String"
					},
					{
						"name": "Violation Code",
						"type": "String"
					},
					{
						"name": "Vehicle Body Type",
						"type": "String"
					},
					{
						"name": "Vehicle Make",
						"type": "String"
					},
					{
						"name": "Issuing Agency",
						"type": "String"
					},
					{
						"name": "Street Code1",
						"type": "String"
					},
					{
						"name": "Street Code2",
						"type": "String"
					},
					{
						"name": "Street Code3",
						"type": "String"
					},
					{
						"name": "Vehicle Expiration Date",
						"type": "String"
					},
					{
						"name": "Violation Location",
						"type": "String"
					},
					{
						"name": "Violation Precinct",
						"type": "String"
					},
					{
						"name": "Issuer Precinct",
						"type": "String"
					},
					{
						"name": "Issuer Code",
						"type": "String"
					},
					{
						"name": "Issuer Command",
						"type": "String"
					},
					{
						"name": "Issuer Squad",
						"type": "String"
					},
					{
						"name": "Violation Time",
						"type": "String"
					},
					{
						"name": "Time First Observed",
						"type": "String"
					},
					{
						"name": "Violation County",
						"type": "String"
					},
					{
						"name": "Violation In Front Of Or Opposite",
						"type": "String"
					},
					{
						"name": "House Number",
						"type": "String"
					},
					{
						"name": "Street Name",
						"type": "String"
					},
					{
						"name": "Intersecting Street",
						"type": "String"
					},
					{
						"name": "Date First Observed",
						"type": "String"
					},
					{
						"name": "Law Section",
						"type": "String"
					},
					{
						"name": "Sub Division",
						"type": "String"
					},
					{
						"name": "Violation Legal Code",
						"type": "String"
					},
					{
						"name": "Days Parking In Effect    ",
						"type": "String"
					},
					{
						"name": "From Hours In Effect",
						"type": "String"
					},
					{
						"name": "To Hours In Effect",
						"type": "String"
					},
					{
						"name": "Vehicle Color",
						"type": "String"
					},
					{
						"name": "Unregistered Vehicle?",
						"type": "String"
					},
					{
						"name": "Vehicle Year",
						"type": "String"
					},
					{
						"name": "Meter Number",
						"type": "String"
					},
					{
						"name": "Feet From Curb",
						"type": "String"
					},
					{
						"name": "Violation Post Code",
						"type": "String"
					},
					{
						"name": "Violation Description",
						"type": "String"
					},
					{
						"name": "No Standing or Stopping Violation",
						"type": "String"
					},
					{
						"name": "Hydrant Violation",
						"type": "String"
					},
					{
						"name": "Double Parking Violation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/foxaueast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/foxaueast')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('foxaueast_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('foxaueast_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/foxaueastsql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('foxaueastsql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyAIR-AUEast')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyAIR-AUSouthEast')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia Southeast",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}